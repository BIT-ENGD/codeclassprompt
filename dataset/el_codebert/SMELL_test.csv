code,label
public float <w> get Score </w> ( ) { return score ; },0
"<comment> void <w> get All Contents </w> ( final Collection < <w> Model Element </w> > results , final <w> Model Element </w> pack , final Collection < <w> Model Element </w> > <w> dup Check </w> ) { if ( pack = = null | | <w> dup Check </w> . contains ( pack ) ) { return ; } <w> dup Check </w> . add ( pack ) ; try { <comment> if ( pack instanceof Namespace ) { <w> get Contents </w> ( results , pack ) ; } <comment> <comment> if ( pack instanceof Classifier | | pack instanceof <w> Uml Package </w> ) { Collection < <w> Generalizable Element </w> > parents = <w> Core Helper MDR Impl </w> . <w> get Parents </w> ( ( <w> Generalizable Element </w> ) pack ) ; <comment> Set < <w> Model Element </w> > <w> all Contents </w> = new <w> Hash Set </w> < <w> Model Element </w> > ( 2000 ) ; for ( <w> Generalizable Element </w> parent : parents ) { <w> get All Contents </w> ( <w> all Contents </w> , parent , <w> dup Check </w> ) ; } if ( pack instanceof <w> Uml Package </w> ) { <w> get All Imported Elements </w> ( <w> all Contents </w> , pack ) ; for ( <w> Generalizable Element </w> parent : parents ) { <w> get All Imported Elements </w> ( <w> all Contents </w> , parent ) ; } } for ( <w> Model Element </w> element : <w> all Contents </w> ) { if ( <w> Visibility Kind Enum </w> . <w> VK _ PUBLIC </w> . equals ( element . <w> get Visibility </w> ( ) ) | | <w> Visibility Kind Enum </w> . <w> VK _ PROTECTED </w> . equals ( element . <w> get Visibility </w> ( ) ) ) { results . add ( element ) ; } } } <comment> if ( pack instanceof Collaboration ) { <comment> LOG . debug ( <str-literal> <str-literal> <str-literal> + pack ) ; } } catch ( <w> Invalid Object Exception </w> e ) { throw new <w> Invalid Element Exception </w> ( e ) ; } }",1
protected int <w> image Width </w> ;,0
<comment> private boolean <w> versioned Vertices </w> = false ;,1
<comment> public static native long create ( long parent ) ;,0
private final List < <w> Field Meta Data </w> > fields = new <w> Array List </w> < > ( ) ;,0
<comment> public <w> Source Validity </w> <w> get Validity For Event Pipeline </w> ( ) { return null ; },1
<comment> public Enumeration <w> get Headers </w> ( String name ) { throw new <w> Assertion Failed Error </w> ( <str-literal> <str-literal> <str-literal> ) ; },0
private static final boolean [ ] <w> IS _ TOKEN </w> = new boolean [ <w> ARRAY _ SIZE </w> ] ;,1
final <w> Postings Enum </w> postings ;,0
<comment> protected Map <w> processing Pipeline Object Model </w> ;,1
public <w> Peeking Reiterator </w> ( Reiterator < T > iterator ) { this . iterator = <w> check Not Null </w> ( iterator ) ; },0
<comment> private final int <w> num Docs </w> ;,0
private int [ ] maskrb ;,1
<comment> protected int <w> num Columns </w> = 0 ;,0
"<comment> public void <w> permit Denied </w> ( Request request , Response response ) throws <w> IO Exception </w> , <w> Servlet Exception </w> { <comment> }",0
<comment> public static final short POSITIONS = FREQS | 1 < < 4 ;,0
<comment> protected final List < <w> Geo Polygon </w> > holes ;,0
@ Override public <w> M Bean Notification Info </w> [ ] <w> get Notification Info </w> ( ) { return notifier . <w> get Notification Info </w> ( ) ; },0
private static final long <w> serial Version UID </w> = 0 L ;,0
public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <w> string Map </w> . get ( Op ) ) ; Child . <w> To Source </w> ( sb ) ; },1
<comment> public final long <w> sum Doc Freq </w> ( ) { return <w> sum Doc Freq </w> ; },0
<comment> protected Map <w> object Model </w> ;,1
<comment> private boolean <w> verbose Docs </w> ;,1
<comment> final public Token <w> get Token </w> ( int index ) { Token t = token ; for ( int i = 0 ; i < index ; i + + ) { if ( t . next ! = null ) t = t . next ; else t = t . next = <w> token _ source </w> . <w> get Next Token </w> ( ) ; } return t ; },1
@ Override public <w> Maven Execution Request </w> <w> set Make Behavior </w> ( String <w> make Behavior </w> ) { this . <w> make Behavior </w> = <w> make Behavior </w> ; return this ; },1
"<comment> public org . apache . spark . sql . execution . datasources . parquet . test . avro . Nested . Builder <w> set Nested Ints Column </w> ( java . util . List < java . lang . Integer > value ) { validate ( fields ( ) [ 0 ] , value ) ; this . <w> nested _ ints _ column </w> = value ; <w> field Set Flags </w> ( ) [ 0 ] = true ; return this ; }",1
"<comment> public static final Schema [ ] <w> CONTROLLED _ SHUTDOWN _ REQUEST </w> = { null , <w> CONTROLLED _ SHUTDOWN _ REQUEST _ V 1 </w> } ;",1
"<comment> private final Set < <w> Topic Partition </w> > <w> task 1 Assignment </w> = Collections . singleton ( new <w> Topic Partition </w> ( TOPIC , 1 ) ) ;",1
<comment> protected final int <w> max Passages </w> ;,0
<comment> private static final List < String > <w> empty String </w> = Collections . <w> empty List </w> ( ) ;,1
"@ Test public void <w> null Schema And Primitive To Json </w> ( ) { <comment> <w> Json Node </w> converted = parse ( converter . <w> from Connect Data </w> ( TOPIC , null , true ) ) ; <w> validate Envelope Null Schema </w> ( converted ) ; <w> assert True </w> ( converted . get ( <w> Json Schema </w> . <w> ENVELOPE _ SCHEMA _ FIELD _ NAME </w> ) . <w> is Null </w> ( ) ) ; <w> assert Equals </w> ( true , converted . get ( <w> Json Schema </w> . <w> ENVELOPE _ PAYLOAD _ FIELD _ NAME </w> ) . <w> boolean Value </w> ( ) ) ; }",1
<comment> public static final String <w> ROCKSDB _ CONFIG _ SETTER _ CLASS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;,0
public int <w> get Doc Count </w> ( ) { return <w> doc Count </w> ; },0
"public void <w> To Source </w> ( <w> String Builder </w> sb ) { if ( attributes ! = null ) { attributes . <w> To Source </w> ( sb ) ; this . <w> New Line </w> ( sb ) ; } this . <w> Trace Modifiers </w> ( this . modifiers , sb ) ; this . type . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> ) ; this . names . get ( 0 ) . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( params ! = null ) { String comma = <str-literal> <str-literal> ; for ( int i = 0 ; i < params . size ( ) ; i + + ) { sb . append ( comma ) ; comma = <str-literal> <str-literal> <str-literal> ; params . get ( i ) . <w> To Source </w> ( sb ) ; } } sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . <w> New Line </w> ( sb ) ; <w> statement Block </w> . <w> To Source </w> ( sb ) ; }",1
"<comment> public void <w> set Session Cache Enabled </w> ( boolean enabled ) { long mode = enabled ? SSL . <w> SSL _ SESS _ CACHE _ SERVER </w> : SSL . <w> SSL _ SESS _ CACHE _ OFF </w> ; <w> SSL Context </w> . <w> set Session Cache Mode </w> ( context , mode ) ; }",0
private final int <w> max Cache Size Bytes </w> = 150 ;,0
private int <w> num Docs </w> ;,0
<comment> private int <w> hsts Max Age Seconds </w> = 0 ;,0
public static final int <w> APR _ LOCK _ FLOCK </w> = 1 ; <comment>,0
<comment> public static final String <w> WINDOW _ STORE _ CHANGE _ LOG _ ADDITIONAL _ RETENTION _ MS _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;,0
private final <w> Byte Buffer </w> size ;,1
"<comment> private static Hashtable < Class , List < Critic > > <w> critic Registry </w> = new Hashtable < Class , List < Critic > > ( 100 ) ;",0
<comment> protected boolean <w> get Populate Request Attributes From Socket </w> ( ) { return true ; },1
@ Override public boolean [ ] <w> get Issuer Unique ID </w> ( ) { return unwrap ( ) . <w> get Issuer Unique ID </w> ( ) ; },1
private <w> Term Iterator </w> iterator ;,0
"<comment> public Iterable < Map . Entry < K , T > > entries ( ) { return Iterables . <w> unmodifiable Iterable </w> ( metrics . <w> entry Set </w> ( ) ) ; }",0
public static final String PARTITIONS = <str-literal> <str-literal> <str-literal> ;,1
private final String [ ] <w> topic 1 </w> = { <str-literal> <str-literal> <str-literal> } ;,1
"<comment> public void <w> get Bounds </w> ( final <w> Planet Model </w> <w> planet Model </w> , Bounds bounds ) { bounds . <w> add Point </w> ( point ) ; if ( <w> circle Plane </w> = = null ) return ; bounds . <w> add Plane </w> ( <w> planet Model </w> , <w> circle Plane </w> ) ; }",1
"<comment> public static byte [ ] <w> decode Base 64 </w> ( final byte [ ] <w> base 64 Data </w> ) { return <w> decode Base 64 </w> ( <w> base 64 Data </w> , 0 , <w> base 64 Data </w> . length ) ; }",0
<comment> public final List < <w> GUI Settings Tab Interface </w> > <w> get Settings Tabs </w> ( ) { return Collections . <w> unmodifiable List </w> ( <w> settings Tabs </w> ) ; },0
"@ Override public synchronized Void get ( ) throws <w> Interrupted Exception </w> , <w> Execution Exception </w> { while ( ! completed ) { this . wait ( ) ; } if ( exception ! = null ) throw new <w> Execution Exception </w> ( exception ) ; return null ; }",1
public <w> Ipl Image </w> [ ] <w> get Images </w> ( ) { images [ 0 ] = <w> get Template Image </w> ( ) ; images [ 1 ] = <w> get Target Image </w> ( ) ; images [ 2 ] = <w> get Transformed Image </w> ( ) ; images [ 3 ] = <w> get Residual Image </w> ( ) ; images [ 4 ] = <w> get Mask Image </w> ( ) ; return images ; },0
private int <w> max Bytes </w> = Integer . <w> MAX _ VALUE </w> ;,1
<comment> private List < <w> Commit Point </w> > <w> commits To Delete </w> = new <w> Array List </w> < > ( ) ;,0
@ Override protected List < <w> Query Node </w> > <w> set Children Order </w> ( List < <w> Query Node </w> > children ) throws <w> Query Node Exception </w> { return children ; },1
public void <w> process Element </w> ( <w> Windowed Value </w> < <w> Input T </w> > <w> compressed Elem </w> ) { if ( <w> observes Window </w> ) { for ( <w> Windowed Value </w> < <w> Input T </w> > elem : <w> compressed Elem </w> . <w> explode Windows </w> ( ) ) { <w> invoke Process Element </w> ( elem ) ; } } else { <w> invoke Process Element </w> ( <w> compressed Elem </w> ) ; } },0
long <w> missing Bytes </w> ;,1
public void <w> set Global Update Policy </w> ( String <w> update Policy </w> ) { <w> global Update Policy </w> = <w> update Policy </w> ; },0
private final boolean methods,1
"private static void <w> print Html </w> ( <w> Print Stream </w> out ) throws <w> No Such Field Exception </w> , <w> Illegal Access Exception </w> , <w> Instantiation Exception </w> { for ( final <w> Doc Info </w> <w> doc Info </w> : TRANSFORMATIONS ) { <w> print Transformation Html </w> ( out , <w> doc Info </w> ) ; } }",0
@ Override public <w> Maven Execution Request </w> <w> set Resume From </w> ( String project ) { this . <w> resume From </w> = project ; return this ; },1
private int <w> remaining Positions </w> ;,1
private <w> Byte Buffer </w> bb = null ;,0
<comment> static final byte BYTES = 1 ;,1
protected transient byte [ ] <w> map Context Name </w> ;,1
"<comment> private final Set < <w> Topic Partition </w> > <w> task 0 Assignment </w> = Collections . singleton ( new <w> Topic Partition </w> ( TOPIC , 0 ) ) ;",1
"private < T > List < String > <w> get Reactor Order </w> ( String <w> test Project </w> throws Exception { <w> Plexus Container </w> container = <w> get Container </w> ( ) ; <w> Component Descriptor </w> < T > cd = new <w> Component Descriptor </w> < > ( participant , container . <w> get Container Realm </w> ( ) ) ; cd . <w> set Role Class </w> ( <w> Abstract Maven Lifecycle Participant </w> . class ) ; container . <w> add Component Descriptor </w> ( cd ) ; Maven maven = container . lookup ( Maven . class ) ; File pom = <w> get Project </w> ( <w> test Project </w> ) ; <w> Maven Execution Request </w> request = <w> create Maven Execution Request </w> ( pom ) ; request . <w> set Goals </w> ( Arrays . <w> as List </w> ( <str-literal> <str-literal> <str-literal> ) ) ; <w> Maven Execution Result </w> result = maven . execute ( request ) ; <w> assert False </w> ( result . <w> get Exceptions </w> ( ) . <w> to String </w> ( ) , result . <w> has Exceptions </w> ( ) ) ; List < String > order = new <w> Array List </w> < > ( ) ; for ( <w> Maven Project </w> project : result . <w> get Topologically Sorted Projects </w> ( ) ) { order . add ( project . <w> get Artifact Id </w> ( ) ) ; } return order ; }",1
private final <w> Metric Name </w> name ;,0
private static final int <w> MAX _ INTEGER _ OCTETS </w> = 8 ;,0
<comment> private final int <w> max Retries </w> ;,0
public <w> Maven Execution Result </w> <w> set Dependency Resolution Result </w> ( <w> Dependency Resolution Result </w> <w> dependency Resolution Result </w> ) { this . <w> dependency Resolution Result </w> = <w> dependency Resolution Result </w> ; return this ; },1
<comment> public Object <w> get Value </w> ( ) { return this . value ; },0
public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; <comment> Target . <w> To Source </w> ( sb ) ; if ( <w> Is Alias </w> ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; <w> alias Name </w> . <w> To Source </w> ( sb ) ; } sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . <w> New Line </w> ( sb ) ; },1
<comment> private final byte [ ] mask = new byte [ 4 ] ;,1
private final static int rounds = 15 ;,1
"<comment> public static final <w> Configuration Key </w> <w> KEY _ SHOW _ TYPES </w> = Configuration . <w> make Key </w> ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> ) ;",0
"* * * Update the current error state to the new error state if the new error * state is more severe than the current error state . * @ param <w> error State </w> The error status details * @ param t The error which occurred * / protected void <w> set Error State </w> ( <w> Error State </w> <w> error State </w> , Throwable t ) { boolean <w> block Io </w> = this . <w> error State </w> . <w> is Io Allowed </w> ( ) & & ! <w> error State </w> . <w> is Io Allowed </w> ( ) ; this . <w> error State </w> = this . <w> error State </w> . <w> get Most Severe </w> ( <w> error State </w> ) ; if ( <w> block Io </w> & & ! <w> Container Thread Marker </w> . <w> is Container Thread </w> ( ) & & <w> is Async </w> ( ) ) { <comment> <comment> <comment> <comment> <comment> if ( response . <w> get Status </w> ( ) < 400 ) { response . <w> set Status </w> ( 500 ) ; } <w> get Log </w> ( ) . info ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> ) , t ) ; <comment> <comment> request . <w> set Attribute </w> ( <w> Request Dispatcher </w> . <w> ERROR _ EXCEPTION </w> , t ) ; <w> socket Wrapper </w> . <w> process Socket </w> ( <w> Socket Event </w> . ERROR , true ) ; } }",0
<comment> protected Executor <w> get Executor </w> ( ) { return endpoint . <w> get Executor </w> ( ) ; },0
@ Override public <w> Maven Execution Request </w> <w> set Repository Cache </w> ( <w> Repository Cache </w> <w> repository Cache </w> ) { this . <w> repository Cache </w> = <w> repository Cache </w> ; return this ; },1
private char [ ] password ;,1
"<comment> final Consumer < byte [ ] , byte [ ] > <w> restore Consumer </w> ;",0
"private void <w> reader To Writer </w> ( Reader reader , Writer writer ) throws <w> IO Exception </w> { int ch ; while ( ( ch = reader . read ( ) ) ! = - 1 ) { if ( ch = = 0xffff ) { LOG . info ( <str-literal> <str-literal> <str-literal> ) ; } else if ( ch = = 8 ) { LOG . info ( <str-literal> <str-literal> <str-literal> ) ; } else { writer . write ( ch ) ; } } }",1
public byte [ ] <w> get Header </w> ( ) { return <w> Non Blocking Coordinator </w> . <w> COORD _ HEADER </w> ; },1
<comment> protected Executor <w> get Executor </w> ( ) { return endpoint . <w> get Executor </w> ( ) ; },0
private <w> Input Stream </w> is ;,0
<comment> protected boolean <w> discount Overlaps </w> = true ;,0
"<comment> private String <w> generate Constraint Enriched Doc Comment </w> ( Object me , Object ae ) { String s = <w> generate Constraint Enriched Doc Comment </w> ( me , true , INDENT ) ; if ( <w> is Collection </w> ( ae ) ) { <comment> <comment> <w> String Buffer </w> <w> s Doc Comment </w> = new <w> String Buffer </w> ( 80 ) ; <comment> if ( ! ( s = = null | | <str-literal> <str-literal> . equals ( s ) ) ) { <comment> <w> s Doc Comment </w> . append ( s . substring ( 0 , s . <w> index Of </w> ( <str-literal> <str-literal> <str-literal> ) + 1 ) ) ; } else { <w> s Doc Comment </w> . append ( INDENT ) . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> LINE _ SEPARATOR </w> ) ; <w> s Doc Comment </w> . append ( INDENT ) . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> LINE _ SEPARATOR </w> ) ; <w> s Doc Comment </w> . append ( INDENT ) . append ( <str-literal> <str-literal> <str-literal> ) ; } <comment> Object type = Model . <w> get Facade </w> ( ) . <w> get Type </w> ( ae ) ; if ( type ! = null ) { <w> s Doc Comment </w> . append ( <str-literal> <str-literal> <str-literal> ) ; <w> s Doc Comment </w> . append ( Model . <w> get Facade </w> ( ) . <w> get Name </w> ( type ) ) ; } <comment> <comment> <comment> <comment> <comment> <w> s Doc Comment </w> . append ( <w> LINE _ SEPARATOR </w> ) . append ( INDENT ) . append ( <str-literal> <str-literal> <str-literal> ) ; <w> s Doc Comment </w> . append ( <w> LINE _ SEPARATOR </w> ) ; return <w> s Doc Comment </w> . <w> to String </w> ( ) ; } return ( s ! = null ) ? s : <str-literal> <str-literal> ; }",0
public <w> Block Statement </w> Statements = new <w> Block Statement </w> ( ) ;,1
<comment> public static final String <w> KEY _ EXTENSIONS _ REALMS </w> = <w> Default Maven Plugin Manager </w> . class . <w> get Name </w> ( ) + <str-literal> <str-literal> <str-literal> ;,0
"private static final char [ ] hexadecimal = { <str-literal> <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> , <str-literal> } ;",1
public void <w> To Source </w> ( <w> String Builder </w> sb ) { },1
@ Override public <w> Maven Execution Request </w> <w> set Excluded Projects </w> ( List < String > <w> excluded Projects </w> ) { if ( <w> excluded Projects </w> ! = null ) { this . <w> excluded Projects </w> = new <w> Array List </w> < > ( <w> excluded Projects </w> ) ; } else { this . <w> excluded Projects </w> = null ; } return this ; },1
<comment> public static boolean <w> disable Virus Checker </w> ( Directory in ) { Directory dir = <w> Filter Directory </w> . unwrap ( in ) ; if ( dir instanceof <w> FS Directory </w> ) { <w> File System </w> fs = ( ( <w> FS Directory </w> ) dir ) . <w> get Directory </w> ( ) . <w> get File System </w> ( ) ; while ( fs instanceof <w> Filter File System </w> ) { <w> Filter File System </w> ffs = ( <w> Filter File System </w> ) fs ; if ( ffs . <w> get Parent </w> ( ) instanceof <w> Virus Checking FS </w> ) { <w> Virus Checking FS </w> vfs = ( <w> Virus Checking FS </w> ) ffs . <w> get Parent </w> ( ) ; boolean <w> is Enabled </w> = vfs . <w> is Enabled </w> ( ) ; vfs . disable ( ) ; return <w> is Enabled </w> ; } fs = ffs . <w> get Delegate </w> ( ) ; } } return false ; },0
public Enumeration <w> get Locales </w> ( ) { return request . <w> get Locales </w> ( ) ; },0
long n = 1000l ;,0
<comment> public void validate ( ) { this . schema . validate ( this ) ; },1
@ Override public <w> Maven Execution Request </w> <w> set Inactive Profiles </w> ( List < String > <w> inactive Profiles </w> ) { if ( <w> inactive Profiles </w> ! = null ) { this . <w> inactive Profiles </w> = new <w> Array List </w> < > ( <w> inactive Profiles </w> ) ; } else { this . <w> inactive Profiles </w> = null ; } return this ; },1
"private void <w> to Exponential Format </w> ( int <w> first Digit </w> , int <w> dec Point </w> ) { if ( end - <w> first Digit </w> > 1 ) { <comment> int dot = <w> first Digit </w> + 1 ; System . arraycopy ( chars , dot , chars , dot + 1 , end - dot ) ; chars [ dot ] = <str-literal> ; end + + ; } chars [ end + + ] = <str-literal> ; char sign = <str-literal> ; int exp = <w> dec Point </w> - 1 ; if ( exp < 0 ) { sign = <str-literal> ; exp = - exp ; } chars [ end + + ] = sign ; int <w> char Pos </w> = exp > 99 ? end + 2 : exp > 9 ? end + 1 : end ; end = <w> char Pos </w> + 1 ; <comment> for ( ; ; ) { int r = exp % 10 ; chars [ <w> char Pos </w> - - ] = digits [ r ] ; exp = exp / 10 ; if ( exp = = 0 ) break ; } }",1
<w> Test Listener </w> [ ] test = null ;,1
<comment> public boolean <w> is Expression Closure </w> ( ) { return <w> is Expression Closure </w> ; },0
<comment> private static final String <w> HSTS _ HEADER _ NAME </w> = <str-literal> <str-literal> <str-literal> ;,0
public <w> Project Building Request </w> <w> set Process Plugins </w> ( boolean <w> process Plugins </w> ) { this . <w> process Plugins </w> = <w> process Plugins </w> ; return this ; },1
<comment> private final int buckets ;,0
private static final byte [ ] <w> MIN _ SUFFIX </w> = new byte [ <w> SUFFIX _ SIZE </w> ] ;,1
<comment> public static final long <w> MAXIMUM _ PAGE _ SIZE _ BYTES </w> = ( ( 1l < < 31 ) - 1 ) * 8l ;,0
@ Override public <w> String Buffer </w> <w> get Request URL </w> ( ) { return <w> Request Util </w> . <w> get Request URL </w> ( this ) ; },0
<comment> private long memsz ;,0
"private void <w> validate Effective Dependency </w> ( <w> Model Problem Collector </w> problems String prefix , <w> Model Building Request </w> request ) { <w> validate Id </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . ERROR , Version . BASE , d . <w> get Artifact Id </w> ( ) , d . <w> get Management Key </w> ( ) , d ) ; <w> validate Id </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . ERROR , Version . BASE , d . <w> get Group Id </w> ( ) , d . <w> get Management Key </w> ( ) , d ) ; if ( ! management ) { <w> validate String Not Empty </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . ERROR , Version . BASE , d . <w> get Type </w> ( ) , d . <w> get Management Key </w> ( ) , d ) ; <w> validate Dependency Version </w> ( problems , d , prefix ) ; } if ( <str-literal> <str-literal> <str-literal> . equals ( d . <w> get Scope </w> ( ) ) ) { String <w> system Path </w> = d . <w> get System Path </w> ( ) ; if ( <w> String Utils </w> . <w> is Empty </w> ( <w> system Path </w> ) ) { <w> add Violation </w> ( problems , Severity . ERROR , Version . BASE , prefix + <str-literal> <str-literal> <str-literal> , d . <w> get Management Key </w> ( ) , <str-literal> <str-literal> <str-literal> , d ) ; } else { File <w> sys File </w> = new File ( <w> system Path </w> ) ; if ( ! <w> sys File </w> . <w> is Absolute </w> ( ) ) { <w> add Violation </w> ( problems , Severity . ERROR , Version . BASE , prefix + <str-literal> <str-literal> <str-literal> , d . <w> get Management Key </w> ( ) , <str-literal> <str-literal> <str-literal> + <w> system Path </w> , d ) ; } else if ( ! <w> sys File </w> . <w> is File </w> ( ) ) { String msg = <str-literal> <str-literal> <str-literal> + <w> sys File </w> . <w> get Absolute Path </w> ( ) ; <w> system Path </w> = <w> system Path </w> . replace ( <str-literal> , File . <w> separator Char </w> ) . replace ( <str-literal> , File . <w> separator Char </w> ) ; String <w> jdk Home </w> = request . <w> get System Properties </w> ( ) . <w> get Property </w> ( <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> ) + File . separator + <str-literal> <str-literal> <str-literal> ; if ( <w> system Path </w> . <w> starts With </w> ( <w> jdk Home </w> ) ) { msg + = <str-literal> <str-literal> <str-literal> ; } <w> add Violation </w> ( problems , Severity . WARNING , Version . BASE , prefix + <str-literal> <str-literal> <str-literal> , d . <w> get Management Key </w> ( ) , msg , d ) ; } } } else if ( <w> String Utils </w> . <w> is Not Empty </w> ( d . <w> get System Path </w> ( ) ) ) { <w> add Violation </w> ( problems , Severity . ERROR , Version . BASE , prefix + <str-literal> <str-literal> <str-literal> , d . <w> get Management Key </w> ( ) , <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> , d ) ; } if ( request . <w> get Validation Level </w> ( ) > = <w> Model Building Request </w> . <w> VALIDATION _ LEVEL _ MAVEN _ 2 _ 0 </w> ) { for ( Exclusion exclusion : d . <w> get Exclusions </w> ( ) ) { if ( request . <w> get Validation Level </w> ( ) < <w> Model Building Request </w> . <w> VALIDATION _ LEVEL _ MAVEN _ 3 _ 0 </w> ) { <w> validate Id </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . WARNING , Version . <w> V 20 </w> , exclusion . <w> get Group Id </w> ( ) , d . <w> get Management Key </w> ( ) , exclusion ) ; <w> validate Id </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . WARNING , Version . <w> V 20 </w> , exclusion . <w> get Artifact Id </w> ( ) , d . <w> get Management Key </w> ( ) , exclusion ) ; } else { <w> validate Id With Wildcards </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . WARNING , Version . <w> V 30 </w> , exclusion . <w> get Group Id </w> ( ) , d . <w> get Management Key </w> ( ) , exclusion ) ; <w> validate Id With Wildcards </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . WARNING , Version . <w> V 30 </w> , exclusion . <w> get Artifact Id </w> ( ) , d . <w> get Management Key </w> ( ) , exclusion ) ; } } } }",1
<comment> public static final String <w> JAAS _ CONF _ PROPERTY </w> = <str-literal> <str-literal> <str-literal> ;,0
@ Override public boolean <w> is Async </w> ( ) { return <w> async State Machine </w> . <w> is Async </w> ( ) ; },0
private static final int <w> MAX _ CACHE _ SIZE _ BYTES </w> = 600 ;,0
@ Override public int [ ] <w> get Int Block </w> ( ) { if ( <w> free Blocks </w> = = 0 ) { <w> bytes Used </w> . <w> add And Get </w> ( <w> block Size </w> * Integer . BYTES ) ; return new int [ <w> block Size </w> ] ; } final int [ ] b = <w> free Byte Blocks </w> [ - - <w> free Blocks </w> ] ; <w> free Byte Blocks </w> [ <w> free Blocks </w> ] = null ; return b ; },1
<comment> public static final String <w> DEREF _ ALIASES </w> = <str-literal> <str-literal> <str-literal> ;,0
"public String <w> set Parameter </w> ( String <w> arg 0 </w> return <w> wrapped Parameters </w> . <w> set Parameter </w> ( <w> arg 0 </w> , <w> arg 1 </w> ) ; }",1
private long <w> last Refresh Ms </w> ;,0
public static <w> Char Block Array </w> open ( <w> Input Stream </w> in ) throws <w> IO Exception </w> <w> Object Input Stream </w> ois = null ; try { ois = new <w> Object Input Stream </w> ( in ) ; <w> Char Block Array </w> a = ( <w> Char Block Array </w> ) ois . <w> read Object </w> ( ) ; return a ; } finally { if ( ois ! = null ) { ois . close ( ) ; } } },0
"@ Override public org . eclipse . aether . metadata . Metadata <w> set Properties </w> ( Map < String , String > properties ) { return this ; }",1
private int <w> bloom Size </w> ;,0
private volatile int <w> nr Of Invocations </w> ;,0
private int <w> doc Base </w> ;,0
<comment> public static final String <w> ACTION _ IMPORT _ FROM _ SOURCES </w> = <str-literal> <str-literal> <str-literal> ;,0
@ Override protected List < <w> Query Node </w> > <w> set Children Order </w> ( List < <w> Query Node </w> > children ) throws <w> Query Node Exception </w> { return children ; },1
<comment> @ Internal public <w> Distribution Cell </w> ( <w> Metric Name </w> name ) { this . name = name ; },0
@ Override protected String <w> get Instructions </w> ( int index ) { return instructions [ index - BASE ] ; },1
<comment> public static final String <w> DEFAULT _ JAAS _ CONF </w> = <str-literal> <str-literal> <str-literal> ;,0
"<comment> @ Nullable private Instant <w> add End Of Window Or Garbage Collection Holds </w> ( <w> Reduce Fn </w> < ? , ? , ? , W > . Context context , boolean <w> pane Is Empty </w> ) { Instant hold = <w> add End Of Window Hold </w> ( context , <w> pane Is Empty </w> ) ; if ( hold = = null ) { hold = <w> add Garbage Collection Hold </w> ( context , <w> pane Is Empty </w> ) ; } return hold ; }",0
"@ Override public Consumer < byte [ ] , byte [ ] > <w> get Restore Consumer </w> ( final Map < String , Object > config ) { return <w> restore Consumer </w> ; }",0
private static final int <w> NUM _ MILLIS </w> = 2000000000 ;,0
public static final int rows = 12 ;,1
public Long validate ( Object item ) { if ( item instanceof Long ) return ( Long ) item ; throw new <w> Schema Exception </w> ( item + <str-literal> <str-literal> <str-literal> ) ; },0
<comment> private final <w> Linked List </w> < <w> Memory Block </w> > <w> data Pages </w> = new <w> Linked List </w> < > ( ) ;,0
<comment> private long <w> default Soft Min Evictable Idle Time Millis </w> = <w> Base Object Pool Config </w> . <w> DEFAULT _ SOFT _ MIN _ EVICTABLE _ IDLE _ TIME _ MILLIS </w> ;,0
<comment> public <w> M Bean Notification Info </w> [ ] <w> get Notification Info </w> ( ) { return notifier . <w> get Notification Info </w> ( ) ; },0
<comment> private Collection < String > <w> include Coda </w> ;,1
"<comment> private <w> State Serdes </w> < K , V > serdes ;",0
<comment> protected Map <w> object Model </w> = new <w> Hash Map </w> ( ) ;,1
private final <w> Terms Enum With Slice </w> [ ] top ;,1
public void <w> check Integrity </w> ( ) throws <w> IO Exception </w> { <comment> <w> Codec Util </w> . <w> checksum Entire File </w> ( in ) ; <comment> <w> postings Reader </w> . <w> check Integrity </w> ( ) ; },0
@ Override public Savepoint <w> set Savepoint </w> ( ) throws <w> SQL Exception </w> { return null ; },1
public String <w> get Type Name </w> ( ) { if ( <w> type Name </w> ! = null ) { return <w> type Name </w> ; } else { return type . <w> get Name </w> ( ) ; } },0
<comment> private final <w> Tag Attribute Info </w> [ ] <w> attribute Info </w> ;,0
"protected void update ( Sample sample , <w> Metric Config </w> config , double value , long now ) { sample . value + = 1.0 ; }",0
final int <w> get Attributes </w> ( int id ) { <w> ensure Id </w> ( id ) ; return <w> attribute Array </w> [ id - 1 ] ; },1
<comment> public Iterable < T > values ( ) { return Iterables . <w> unmodifiable Iterable </w> ( metrics . values ( ) ) ; },0
public int <w> get Case Count </w> ( ) throws <w> Interrupted Exception </w> { latch . await ( ) ; return <w> case Count </w> ; },0
"<comment> private final <w> Concurrent Hash Map </w> < <w> Socket Address </w> , <w> Client Pool </w> > <w> connection Pool </w> ;",0
@ Override public void <w> get Bounds </w> ( Bounds bounds ) { bounds . <w> add Point </w> ( this ) ; },1
"private void <w> validate 20 Raw Plugins </w> ( <w> Model Problem Collector </w> problems <w> Model Building Request </w> request ) { Severity <w> err On 31 </w> = <w> get Severity </w> ( request , <w> Model Building Request </w> . <w> VALIDATION _ LEVEL _ MAVEN _ 3 _ 1 </w> ) ; Map < String , Plugin > index = new <w> Hash Map </w> < > ( ) ; for ( Plugin plugin : plugins ) { String key = plugin . <w> get Key </w> ( ) ; Plugin existing = index . get ( key ) ; if ( existing ! = null ) { <w> add Violation </w> ( problems , <w> err On 31 </w> , Version . <w> V 20 </w> , prefix + <str-literal> <str-literal> <str-literal> , null , <str-literal> <str-literal> <str-literal> + key , plugin ) ; } else { index . put ( key , plugin ) ; } Set < String > <w> execution Ids </w> = new <w> Hash Set </w> < > ( ) ; for ( <w> Plugin Execution </w> exec : plugin . <w> get Executions </w> ( ) ) { if ( ! <w> execution Ids </w> . add ( exec . <w> get Id </w> ( ) ) ) { <w> add Violation </w> ( problems , Severity . ERROR , Version . <w> V 20 </w> , prefix + <str-literal> <str-literal> <str-literal> + plugin . <w> get Key </w> ( ) + <str-literal> <str-literal> <str-literal> , null , <str-literal> <str-literal> <str-literal> + exec . <w> get Id </w> ( ) , exec ) ; } } } }",1
public void <w> finish Doc </w> ( ) throws <w> IO Exception </w> { if ( <w> last Doc ID </w> = = - 1 ) { <comment> return ; } if ( <w> last Position </w> = = - 1 ) { throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> ) ; } },0
private <w> Rocks DB Segmented Bytes Store </w> underlying ;,0
public <w> Live Connect Drv </w> ( String [ ] args ) { super ( args ) ; <w> set Suffix </w> ( <str-literal> <str-literal> <str-literal> ) ; },0
<comment> public void <w> add Value </w> ( <w> Bytes Ref </w> value ) throws <w> IO Exception </w> { int hash = <w> hash Function </w> . hash ( value ) ; if ( hash < 0 ) { hash = hash * - 1 ; } <comment> int <w> bloom Pos </w> = hash & <w> bloom Size </w> ; filter . set ( <w> bloom Pos </w> ) ; },0
<comment> protected <w> Jsp Config </w> <w> jsp Config </w> = null ;,0
@ Override public synchronized <w> Model Source </w> <w> get Model Source </w> ( ) { if ( <w> model Source </w> = = null & & <w> pom File </w> ! = null ) { <w> model Source </w> = new <w> File Model Source </w> ( <w> pom File </w> ) ; } return <w> model Source </w> ; },1
"@ Override public void <w> get Distance Bounds </w> ( final Bounds bounds , final <w> Distance Style </w> <w> distance Style </w> , final double <w> distance Value </w> ) { <w> get Bounds </w> ( bounds ) ; }",1
private final <w> Model Problem Collector </w> problems ;,0
<comment> public String <w> get Namespace URI </w> ( String prefix ) { if ( <w> namespace Declarations </w> = = null | | <w> namespace Declarations </w> . size ( ) = = 0 ) return null ; return ( String ) <w> namespace Declarations </w> . get ( prefix ) ; },0
"abstract Builder < K , V > <w> set Value Type Descriptor </w> ( <w> Type Descriptor </w> < V > <w> value Type Descriptor </w> ) ;",1
<comment> private boolean <w> no Snapshot Updates </w> ;,0
@ Override public void <w> ensure Valid </w> ( ) { <w> load Full Batch </w> ( ) . <w> ensure Valid </w> ( ) ; },1
"public <w> Push Builder </w> <w> set Header </w> ( String name , String value ) { List < String > values = headers . get ( name ) ; if ( values = = null ) { values = new <w> Array List </w> < > ( ) ; headers . put ( name , values ) ; } else { values . clear ( ) ; } values . add ( value ) ; return this ; }",1
public String <w> get Types </w> ( ) { return types ; },1
public String <w> to Locale String </w> ( ) { return <w> to String </w> ( ) ; },0
"<comment> public static Object <w> setup Component </w> ( final Object component , final Logger logger , final Context context , final <w> Service Manager </w> <w> service Manager </w> , final Configuration configuration ) throws Exception { return <w> setup Component </w> ( component , logger , context , <w> service Manager </w> , configuration , true ) ; }",0
@ Override public <w> Model Building Request </w> <w> set Build Start Time </w> ( Date <w> build Start Time </w> ) { request . <w> set Build Start Time </w> ( <w> build Start Time </w> ) ; return this ; },1
<comment> public boolean <w> is Navigate Forward Enabled </w> ( ) { boolean enabled = false ; if ( <w> _ is Forward Enabled </w> = = 1 ) { enabled = true ; } else { if ( <w> _ is Forward Enabled </w> ! = 0 ) { enabled = <w> navigate Forward </w> ( false ) ! = null ; } } return enabled ; },1
private String <w> get Credentials </w> ( ) { return credentials ; },1
private final String docs ;,1
private static byte [ ] <w> get Binary Value </w> ( <w> T String Value </w> <w> t String </w> ) { if ( <w> t String </w> . <w> is Set Value </w> ( ) ) { return <w> t String </w> . <w> get Value </w> ( ) . <w> get Bytes </w> ( ) ; } return null ; },1
@ Override public <w> Maven Execution Request </w> <w> set Pom </w> ( File pom ) { this . pom = pom ; return this ; },1
<comment> private static int <w> no Docs </w> ;,0
final int [ ] stack ;,0
public int [ ] <w> get Int Block </w> ( ) { return new int [ <w> block Size </w> ] ; },1
"private <w> K Stream Builder </w> <w> setup Topology With Intermediate User Topic </w> ( final String <w> output Topic 2 </w> ) { final <w> K Stream Builder </w> builder = new <w> K Stream Builder </w> ( ) ; final <w> K Stream </w> < Long , String > input = builder . stream ( <w> INPUT _ TOPIC </w> ) ; <comment> input . map ( new <w> Key Value Mapper </w> < Long , String , <w> Key Value </w> < Long , String > > ( ) { @ Override public <w> Key Value </w> < Long , String > apply ( final Long key , final String value ) { return new <w> Key Value </w> < > ( key , value ) ; } } ) . <w> group By Key </w> ( ) . count ( <str-literal> <str-literal> <str-literal> ) . to ( Serdes . Long ( ) , Serdes . Long ( ) , <w> OUTPUT _ TOPIC </w> ) ; input . through ( <w> INTERMEDIATE _ USER _ TOPIC </w> ) . <w> group By Key </w> ( ) . count ( <w> Time Windows </w> . of ( 35 ) . <w> advance By </w> ( 10 ) , <str-literal> <str-literal> <str-literal> ) . <w> to Stream </w> ( ) . map ( new <w> Key Value Mapper </w> < Windowed < Long > , Long , <w> Key Value </w> < Long , Long > > ( ) { @ Override public <w> Key Value </w> < Long , Long > apply ( final Windowed < Long > key , final Long value ) { return new <w> Key Value </w> < > ( key . window ( ) . start ( ) + key . window ( ) . end ( ) , value ) ; } } ) . to ( Serdes . Long ( ) , Serdes . Long ( ) , <w> output Topic 2 </w> ) ; return builder ; }",0
"<comment> public static final Schema [ ] <w> FIND _ COORDINATOR _ REQUEST </w> = { <w> FIND _ COORDINATOR _ REQUEST _ V 0 </w> , <w> FIND _ COORDINATOR _ REQUEST _ V 1 </w> } ;",1
@ Override public <w> Maven Execution Request </w> <w> set Goals </w> ( List < String > goals ) { if ( goals ! = null ) { this . goals = new <w> Array List </w> < > ( goals ) ; } else { this . goals = null ; } return this ; },1
<comment> public long <w> get Content Length </w> ( ) { return - 1 ; },1
public String <w> get Base Version </w> ( ) { if ( <w> base Version </w> = = null & & version ! = null ) { <w> set Base Version Internal </w> ( version ) ; } return <w> base Version </w> ; },1
<comment> public static final int <w> DEFAULT _ MAX _ POINTS _ IN _ LEAF _ NODE </w> = 1024 ;,0
<comment> public void <w> end DTD </w> ( ) throws <w> SAX Exception </w> { <comment> this . <w> in DTD </w> = false ; },0
<comment> private long <w> current Reported Bytes </w> ;,1
"@ Override public void <w> get Bounds </w> ( Bounds bounds ) { <comment> if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> NORTH _ POLE </w> ) ) { bounds . <w> no Top Latitude Bound </w> ( ) . <w> no Longitude Bound </w> ( ) . <w> add Point </w> ( <w> planet Model </w> . <w> NORTH _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> SOUTH _ POLE </w> ) ) { bounds . <w> no Bottom Latitude Bound </w> ( ) . <w> no Longitude Bound </w> ( ) . <w> add Point </w> ( <w> planet Model </w> . <w> SOUTH _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MIN _ X _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MIN _ X _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MAX _ X _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MAX _ X _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MIN _ Y _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MIN _ Y _ POLE </w> ) ; } if ( <w> local Is Within </w> ( <w> planet Model </w> . <w> MAX _ Y _ POLE </w> ) ) { bounds . <w> add Point </w> ( <w> planet Model </w> . <w> MAX _ Y _ POLE </w> ) ; } <comment> for ( final <w> Geo Point </w> point : points ) { bounds . <w> add Point </w> ( point ) ; } <comment> for ( final <w> Sided Plane </w> edge : edges ) { bounds . <w> add Plane </w> ( <w> planet Model </w> , edge , <w> either Bounds </w> . get ( edge ) ) ; final <w> Sided Plane </w> <w> next Edge </w> = <w> next Brother Map </w> . get ( edge ) ; bounds . <w> add Intersection </w> ( <w> planet Model </w> , edge , <w> next Edge </w> , <w> prev Brother Map </w> . get ( edge ) , <w> next Brother Map </w> . get ( <w> next Edge </w> ) ) ; } }",1
private static final int <w> num Vertices </w> = 100 ;,0
<comment> private volatile long <w> size In Bytes </w> = - 1 ;,0
private <w> Project Builder </w> <w> get Project Builder </w> ( ) { if ( <w> project Builder </w> ! = null ) { return <w> project Builder </w> ; } try { <w> project Builder </w> = container . lookup ( <w> Project Builder </w> . class ) ; } catch ( <w> Component Lookup Exception </w> e ) { <comment> } return <w> project Builder </w> ; },0
private static final int <w> EXTRA _ DELAY _ SECS </w> = 5 ;,0
<comment> final <w> Ints Ref Builder </w> <w> scratch Ints </w> = new <w> Ints Ref Builder </w> ( ) ;,0
private static final long <w> DEFAULT _ CACHE _ SIZE _ BYTES </w> = 1 * 1024 * 1024l ;,0
<comment> protected Map <w> object Model </w> ;,0
"<comment> protected void <w> process Max Active Swaps </w> ( ) { if ( ! <w> get State </w> ( ) . <w> is Available </w> ( ) | | <w> get Max Active Sessions </w> ( ) < 0 ) return ; Session sessions [ ] = <w> find Sessions </w> ( ) ; <comment> int limit = ( int ) ( <w> get Max Active Sessions </w> ( ) * 0.9 ) ; if ( limit > = sessions . length ) return ; if ( log . <w> is Debug Enabled </w> ( ) ) log . debug ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , Integer . <w> value Of </w> ( sessions . length ) ) ) ; int toswap = sessions . length - limit ; for ( int i = 0 ; i < sessions . length & & toswap > 0 ; i + + ) { <w> Standard Session </w> session = ( <w> Standard Session </w> ) sessions [ i ] ; synchronized ( session ) { int <w> time Idle </w> = ( int ) ( session . <w> get Idle Time Internal </w> ( ) / 1000l ) ; if ( <w> time Idle </w> > = <w> min Idle Swap </w> ) { if ( session . <w> access Count </w> ! = null & & session . <w> access Count </w> . get ( ) > 0 ) { <comment> continue ; } if ( log . <w> is Debug Enabled </w> ( ) ) log . debug ( sm . <w> get String </w> ( <str-literal> <str-literal> <str-literal> , session . <w> get Id Internal </w> ( ) , Integer . <w> value Of </w> ( <w> time Idle </w> ) ) ) ; try { <w> swap Out </w> ( session ) ; } catch ( <w> IO Exception </w> e ) { <comment> } toswap - - ; } } } }",0
private final <w> Metric Update </w> < T > committed ;,0
private static final int <w> MANAGER _ SCAN _ INTERVAL _ SECS </w> = 2 ;,0
<comment> private String <w> non Proxy Hosts </w> ;,1
private final List < <w> Compiled Automaton </w> > automata = new <w> Array List </w> < > ( ) ;,0
<comment> @ Override public Log <w> get Logger </w> ( ) { if ( logger ! = null ) return logger ; logger = <w> Log Factory </w> . <w> get Log </w> ( <w> get Log Name </w> ( ) ) ; return logger ; },0
<comment> protected String <w> get Instructions </w> ( ) { return instructions ; },1
<comment> private final int <w> num Entries </w> ;,0
public T next ( ) { T result = peek ( ) ; <w> next Element Computed </w> = false ; return result ; },0
<comment> private final <w> Token Sep </w> delims ;,1
<comment> private boolean <w> scoped Vertices </w> = false ;,1
@ Override protected String <w> get Instructions </w> ( int index ) { return instructions [ index - BASE ] ; },1
<comment> public void <w> set Base Lineno </w> ( int lineno ) { if ( lineno < 0 | | this . lineno > = 0 ) <w> code Bug </w> ( ) ; this . lineno = lineno ; },0
public int <w> index Of </w> ( Object o ) { long <w> long Len </w> = length ; if ( <w> long Len </w> > Integer . <w> MAX _ VALUE </w> ) { throw new <w> Illegal State Exception </w> ( ) ; } int len = ( int ) <w> long Len </w> ; if ( o = = null ) { for ( int i = 0 ; i < len ; i + + ) { if ( get ( i ) = = null ) { return i ; } } } else { for ( int i = 0 ; i < len ; i + + ) { if ( o . equals ( get ( i ) ) ) { return i ; } } } return - 1 ; },0
<comment> private boolean <w> pool Statements </w> = false ;,0
protected void <w> get Random Bytes </w> ( byte bytes [ ] ) { <w> Secure Random </w> random = randoms . poll ( ) ; if ( random = = null ) { random = <w> create Secure Random </w> ( ) ; } random . <w> next Bytes </w> ( bytes ) ; randoms . add ( random ) ; },1
final boolean <w> any Auto Prefix Terms </w> ;,1
private int options ;,1
<comment> public static native int lock ( long mutex ) ;,0
<comment> public static <w> Leaf Reader </w> unwrap ( <w> Leaf Reader </w> reader ) { while ( reader instanceof <w> Filter Leaf Reader </w> ) { reader = ( ( <w> Filter Leaf Reader </w> ) reader ) . in ; } return reader ; },1
<comment> public int <w> free Blocks </w> ( int num ) { assert num > = 0 : <str-literal> <str-literal> <str-literal> + num ; final int stop ; final int count ; if ( num > <w> free Blocks </w> ) { stop = 0 ; count = <w> free Blocks </w> ; } else { stop = <w> free Blocks </w> - num ; count = num ; } while ( <w> free Blocks </w> > stop ) { <w> free Byte Blocks </w> [ - - <w> free Blocks </w> ] = null ; } <w> bytes Used </w> . <w> add And Get </w> ( - count * <w> block Size </w> * Integer . BYTES ) ; assert <w> bytes Used </w> . get ( ) > = 0 ; return count ; },0
@ Override public <w> Maven Execution Request </w> <w> set Use Legacy Local Repository </w> ( boolean <w> use Legacy Local Repository Manager </w> ) { this . <w> use Legacy Local Repository Manager </w> = <w> use Legacy Local Repository Manager </w> ; return this ; },1
"protected void check ( ) { if ( host . <w> get Auto Deploy </w> ( ) ) { <comment> <w> Deployed Application </w> [ ] apps = deployed . values ( ) . <w> to Array </w> ( new <w> Deployed Application </w> [ 0 ] ) ; for ( int i = 0 ; i < apps . length ; i + + ) { if ( ! <w> is Serviced </w> ( apps [ i ] . name ) ) <w> check Resources </w> ( apps [ i ] , false ) ; } <comment> if ( host . <w> get Undeploy Old Versions </w> ( ) ) { <w> check Undeploy </w> ( ) ; } <comment> <w> deploy Apps </w> ( ) ; }",1
private final <w> Disjunction DISI Approximation </w> approximation ;,0
"@ Override public Void get ( ) throws <w> Interrupted Exception </w> , <w> Execution Exception </w> { return null ; }",1
@ Override public <w> Maven Execution Request </w> <w> set Global Toolchains File </w> ( File <w> global Toolchains File </w> ) { this . <w> global Toolchains File </w> = <w> global Toolchains File </w> ; return this ; },1
<comment> public final Set < String > <w> get Dependencies ID </w> ( ) { return dependencies ; },1
<comment> public static final String <w> GROUP _ ID _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;,0
private final int <w> num Bits </w> ;,0
"<comment> private String [ ] <w> get Prefix And Local Name </w> ( String <w> node Name </w> ) { String prefix , <w> local Name </w> ; int <w> colon Pos </w> = <w> node Name </w> . <w> index Of </w> ( <str-literal> <str-literal> <str-literal> ) ; if ( <w> colon Pos </w> ! = - 1 ) { prefix = <w> node Name </w> . substring ( 0 , <w> colon Pos </w> ) ; <w> local Name </w> = <w> node Name </w> . substring ( <w> colon Pos </w> + 1 , <w> node Name </w> . length ( ) ) ; } else { prefix = null ; <w> local Name </w> = <w> node Name </w> ; } return new String [ ] { prefix , <w> local Name </w> } ; }",1
<comment> private static final long <w> MASK _ LONG _ LOWER _ 51 _ BITS </w> = 0x7ffffffffffffl ;,0
<comment> void <w> abort Undrained Batches </w> ( <w> Runtime Exception </w> reason ) { for ( <w> Producer Batch </w> batch : incomplete . <w> copy All </w> ( ) ) { Deque < <w> Producer Batch </w> > dq = <w> get Deque </w> ( batch . <w> topic Partition </w> ) ; boolean aborted = false ; synchronized ( dq ) { if ( ! batch . <w> is Closed </w> ( ) ) { aborted = true ; batch . <w> abort Record Appends </w> ( ) ; dq . remove ( batch ) ; } } if ( aborted ) { batch . abort ( reason ) ; deallocate ( batch ) ; } } },0
private int <w> final Offset </w> = 0 ;,0
static final int <w> OUTPUT _ FLAG _ HAS _ TERMS </w> = 0x2 ;,1
<comment> private int <w> num Bytes </w> ;,0
"private final Map < String , List < <w> Partition Info </w> > > <w> partitions By Topic </w> ;",0
<comment> public static final double <w> MAX _ LAT _ RADIANS </w> = <w> TO _ RADIANS </w> * <w> MAX _ LAT _ INCL </w> ;,0
private final <w> XX Hash 32 </w> checksum ;,0
private int <w> num Records </w> = 0 ;,0
double [ ] <w> thresholds Outlier </w> = { 0.2 } ;,1
private boolean closed = false ;,0
private final String args ;,1
"@ Override public Consumer < byte [ ] , byte [ ] > <w> get Consumer </w> ( Map < String , Object > config ) { return new <w> Kafka Consumer </w> < > ( config , new <w> Byte Array Deserializer </w> ( ) , new <w> Byte Array Deserializer </w> ( ) ) ; }",1
"<comment> public <w> Grouping Search </w> <w> set Caching </w> ( int <w> max Docs To Cache </w> , boolean <w> cache Scores </w> ) { this . <w> max Docs To Cache </w> = <w> max Docs To Cache </w> ; this . <w> max Cache RAMMB </w> = null ; this . <w> cache Scores </w> = <w> cache Scores </w> ; return this ; }",1
public int <w> is Valid </w> ( ) { final long <w> current Time </w> = System . <w> current Time Millis </w> ( ) ; if ( <w> current Time </w> < = this . expires ) { <comment> return <w> Source Validity </w> . VALID ; } <comment> this . expires = <w> current Time </w> + this . delay ; return this . delegate . <w> is Valid </w> ( ) ; },1
"<comment> private Map < String , String > configuration ;",0
protected void <w> initialize Iterator </w> ( ) throws <w> IO Exception </w> { try { <w> analyze Input </w> ( ) ; } catch ( <w> Analysis Engine Process Exception </w> | <w> Resource Initialization Exception </w> e ) { throw new <w> IO Exception </w> ( e ) ; } <w> final Offset </w> = <w> correct Offset </w> ( cas . <w> get Document Text </w> ( ) . length ( ) ) ; Type <w> token Type </w> = cas . <w> get Type System </w> ( ) . <w> get Type </w> ( <w> token Type String </w> ) ; iterator = cas . <w> get Annotation Index </w> ( <w> token Type </w> ) . iterator ( ) ; },0
"public static final Token [ ] <w> TEST _ TOKEN _ POS _ INCR _ EQUAL _ TO _ N </w> = new Token [ ] { <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 0 , 6 ) , <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 7 , 13 ) , <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 14 , 18 ) , <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 29 , 37 , 3 ) , <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 38 , 42 ) , <w> create Token </w> ( <str-literal> <str-literal> <str-literal> , 43 , 49 ) , } ;",0
<comment> void <w> ensure Window Is Active </w> ( W window ) ;,1
<comment> protected <w> Byte Buffer </w> writebuf = null ;,0
@ Override public <w> Maven Execution Request </w> <w> set No Snapshot Updates </w> ( boolean <w> no Snapshot Updates </w> ) { this . <w> no Snapshot Updates </w> = <w> no Snapshot Updates </w> ; return this ; },1
"private String <w> js _ to Source </w> ( ) { <w> String Builder </w> sb = new <w> String Builder </w> ( ) ; sb . append ( <str-literal> ) ; <w> to Source Impl </w> ( ns . <w> get Prefix </w> ( ) , ns . <w> get Uri </w> ( ) , sb ) ; sb . append ( <str-literal> ) ; return sb . <w> to String </w> ( ) ; }",0
<comment> public static final String <w> OFFSET _ STORAGE _ TOPIC _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;,0
"* * * For each class file in the suite directory , create a <w> Test File </w> object . * For <w> Live Connect </w> , the test class name needs to be the name of the class * and the file path needs to be the full package name , prepended with the * <w> Java Script </w> keyword <str-literal> <str-literal> <str-literal> , and without the <str-literal> <str-literal> <str-literal> suffix . * / public void <w> get Cases </w> ( <w> Test Suite </w> suite ) { <w> enable Privileges </w> ( ) ; File dir = new File ( suite . <w> file Path </w> ) ; String [ ] files = dir . list ( ) ; <comment> String filename = <str-literal> <str-literal> <str-literal> + suite . name + <str-literal> <str-literal> <str-literal> ; for ( int i = 0 ; i < files . length ; i + + ) { if ( files [ i ] . <w> ends With </w> ( <w> get Suffix </w> ( ) ) ) { <w> Test File </w> item = new <w> Test File </w> ( files [ i ] , filename + ( files [ i ] . substring ( 0 , files [ i ] . length ( ) - <w> get Suffix </w> ( ) . length ( ) ) ) ) ; p ( item . <w> file Path </w> ) ; suite . <w> add Element </w> ( item ) ; } } }",1
"protected void <w> get Transfer </w> ( Resource resource File destination , <w> Input Stream </w> input , boolean <w> close Input </w> , int <w> max Size </w> ) throws <w> Transfer Failed Exception </w> { <w> add Transfer </w> ( <str-literal> <str-literal> <str-literal> + resource . <w> get Name </w> ( ) ) ; super . <w> get Transfer </w> ( resource , destination , input , <w> close Input </w> , <w> max Size </w> ) ; }",1
private final int <w> num Threads </w> = <w> TEST _ NIGHTLY </w> ? 5 : 3 ;,0
public boolean <w> has Next </w> ( ) { return <w> num Records </w> > 0 ; },0
<comment> private Reader <w> input Pending </w> = <w> ILLEGAL _ STATE _ READER </w> ;,1
"<comment> public static <w> X 509 Certificate </w> <w> generate Certificate </w> ( String dn , <w> Key Pair </w> pair , int days , String algorithm ) throws <w> Certificate Exception </w> { return new <w> Certificate Builder </w> ( days , algorithm ) . generate ( dn , pair ) ; }",0
private static final String [ ] <w> PDF _ FILE </w>,1
"private <w> Index Searcher </w> <w> get Searcher </w> ( ) throws Exception { directory = <w> new Directory </w> ( ) ; String [ ] docs = new String [ ] { <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> } ; <w> Random Index Writer </w> writer = new <w> Random Index Writer </w> ( random ( ) , directory , <w> new Index Writer Config </w> ( new <w> Payload Analyzer </w> ( ) ) . <w> set Similarity </w> ( similarity ) ) ; Document doc = null ; for ( int i = 0 ; i < docs . length ; i + + ) { doc = new Document ( ) ; String <w> doc Text </w> = docs [ i ] ; doc . add ( <w> new Text Field </w> ( <w> Payload Helper </w> . FIELD , <w> doc Text </w> , Field . Store . YES ) ) ; writer . <w> add Document </w> ( doc ) ; } writer . <w> force Merge </w> ( 1 ) ; <w> close Index Reader </w> = writer . <w> get Reader </w> ( ) ; writer . close ( ) ; <w> Index Searcher </w> searcher = <w> new Searcher </w> ( <w> close Index Reader </w> , false ) ; return searcher ; }",1
"<comment> public Object <w> set User Data </w> ( String key , Object value , <w> User Data Handler </w> handler ) { throw new <w> Unsupported Operation Exception </w> ( <w> DOMLEVEL 3 _ ERR _ MSG </w> ) ; }",1
private String xtends ;,0
private final List < Node > isr ;,1
<comment> protected final byte [ ] <w> min Packed Value </w> ;,1
<comment> public void <w> pool Started </w> ( <w> Connection Pool </w> pool ) { <comment> },0
"private void <w> validate 20 Raw Resources </w> ( <w> Model Problem Collector </w> problems <w> Model Building Request </w> request ) { Severity <w> err On 30 </w> = <w> get Severity </w> ( request , <w> Model Building Request </w> . <w> VALIDATION _ LEVEL _ MAVEN _ 3 _ 0 </w> ) ; for ( Resource resource : resources ) { <w> validate String Not Empty </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , Severity . ERROR , Version . <w> V 20 </w> , resource . <w> get Directory </w> ( ) , resource ) ; <w> validate Boolean </w> ( prefix + <str-literal> <str-literal> <str-literal> , problems , <w> err On 30 </w> , Version . <w> V 20 </w> , resource . <w> get Filtering </w> ( ) , resource . <w> get Directory </w> ( ) , resource ) ; } }",1
"public void <w> To Source </w> ( <w> String Builder </w> sb ) { if ( attributes ! = null ) { attributes . <w> To Source </w> ( sb ) ; this . <w> New Line </w> ( sb ) ; } <w> Trace Modifiers </w> ( Modifiers , sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; Type . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> ) ; Name . <w> To Source </w> ( sb ) ; sb . append ( <str-literal> <str-literal> <str-literal> ) ; if ( Params ! = null ) { String comma = <str-literal> <str-literal> ; for ( <w> Param Decl Node </w> pdn : Params ) { sb . append ( comma ) ; comma = <str-literal> <str-literal> <str-literal> ; pdn . <w> To Source </w> ( sb ) ; } } sb . append ( <str-literal> <str-literal> <str-literal> ) ; this . <w> New Line </w> ( sb ) ; }",1
"<comment> private static final Map < String , Integer > <w> OFFSET _ VALUE </w> = Collections . <w> singleton Map </w> ( <str-literal> <str-literal> <str-literal> , 12 ) ;",1
<comment> private Buffer tmp ;,0
"<comment> public synchronized Collection < <w> Streams Metadata </w> > <w> get All Metadata For Store </w> ( final String <w> store Name </w> ) { Objects . <w> require Non Null </w> ( <w> store Name </w> , <str-literal> <str-literal> <str-literal> ) ; if ( ! <w> is Initialized </w> ( ) ) { return Collections . <w> empty List </w> ( ) ; } if ( <w> global Stores </w> . contains ( <w> store Name </w> ) ) { return <w> all Metadata </w> ; } final List < String > <w> source Topics </w> = builder . <w> state Store Name To Source Topics </w> ( ) . get ( <w> store Name </w> ) ; if ( <w> source Topics </w> = = null ) { return Collections . <w> empty List </w> ( ) ; } final <w> Array List </w> < <w> Streams Metadata </w> > results = new <w> Array List </w> < > ( ) ; for ( <w> Streams Metadata </w> metadata : <w> all Metadata </w> ) { if ( metadata . <w> state Store Names </w> ( ) . contains ( <w> store Name </w> ) ) { results . add ( metadata ) ; } } return results ; }",1
"@ Override public double <w> get Radius </w> ( ) { <comment> <comment> <comment> final double <w> center Angle </w> = ( <w> right Lon </w> - ( <w> right Lon </w> + <w> left Lon </w> ) * 0.5 ) * <w> cos Middle Lat </w> ; final double <w> top Angle </w> = <w> center Point </w> . <w> arc Distance </w> ( URHC ) ; return Math . max ( <w> center Angle </w> , <w> top Angle </w> ) ; }",0
<comment> private Map <w> expression Cache </w> ;,0
<comment> private final int <w> num Bits </w> ;,0
<comment> protected final byte [ ] <w> min Packed Value </w> ;,1
<comment> protected volatile int duplicates = 0 ;,0
public String <w> get Version </w> ( ) { if ( version ! = null ) { return version ; } else { return artifact . <w> get Version </w> ( ) ; } },0
"public Dimension <w> set Length </w> ( Dimension target , Dimension source ) { if ( orientation = = VERTICAL ) return new Dimension ( ( int ) target . <w> get Width </w> ( ) , ( int ) source . <w> get Height </w> ( ) ) ; else return new Dimension ( ( int ) source . <w> get Width </w> ( ) , ( int ) target . <w> get Height </w> ( ) ) ; }",1
private List < <w> Ast Node </w> > params ;,0
private static final boolean windows = Loader . <w> get Platform </w> ( ) . <w> starts With </w> ( <str-literal> <str-literal> <str-literal> ) ;,1
"@ Test public void <w> return Different Clients For Different Servers </w> ( ) throws <w> IO Exception </w> { <w> Transport Client Factory </w> factory = context . <w> create Client Factory </w> ( ) ; <w> Transport Client </w> <w> c 1 </w> = factory . <w> create Client </w> ( <w> Test Utils </w> . <w> get Local Host </w> ( ) , <w> server 1 </w> . <w> get Port </w> ( ) ) ; <w> Transport Client </w> <w> c 2 </w> = factory . <w> create Client </w> ( <w> Test Utils </w> . <w> get Local Host </w> ( ) , <w> server 2 </w> . <w> get Port </w> ( ) ) ; <w> assert True </w> ( <w> c 1 </w> . <w> is Active </w> ( ) ) ; <w> assert True </w> ( <w> c 2 </w> . <w> is Active </w> ( ) ) ; <w> assert True </w> ( <w> c 1 </w> ! = <w> c 2 </w> ) ; factory . close ( ) ; }",1
final <w> Streams Metrics Impl </w> metrics ;,0
<comment> public static final int <w> VERSION _ AUTO _ PREFIX _ TERMS </w> = 1 ;,1
@ Override protected List < <w> Query Node </w> > <w> set Children Order </w> ( List < <w> Query Node </w> > children ) throws <w> Query Node Exception </w> { return children ; },1
"public <w> Maven Metadata </w> <w> set File </w> ( File file ) { return new <w> Local Snapshot Metadata </w> ( metadata , file , <w> legacy Format </w> ) ; }",1
public final int <w> num Partitions </w> ;,0
private final Set < String > <w> internal Topics </w> ;,0
public String <w> is EL Ignored </w> ( ) { return <w> el Ignored </w> ; },1
private String <w> instructions 2 </w> = Translator . localize ( <str-literal> <str-literal> <str-literal> ) ;,1
public <w> Block Statement </w> <w> Else Statements </w> = new <w> Block Statement </w> ( ) ;,1
"protected boolean <w> local Is Within </w> ( final Vector v ) { return <w> local Is Within </w> ( v . x , v . y , v . z ) ; }",0
public int <w> get Num Records </w> ( ) { return <w> num Records </w> ; },0
public Set < Class < ? > > <w> get Extension Hosts </w> ( ) { return <w> extension Host Classes </w> ; },0
<comment> private static final String <w> STRING _ SHOWASSOCIATIONNAMES </w> = <str-literal> <str-literal> <str-literal> ;,0
"<comment> private Map < <w> Topic Partition </w> , T > <w> running By Partition </w> = new <w> Hash Map </w> < > ( ) ;",0
<comment> public List <w> get Leave Sitemap Event Listeners </w> ( ) { <comment> <comment> return ( List ) ( ( <w> Array List </w> ) this . <w> leave Sitemap Event Listeners </w> ) . clone ( ) ; },1
public static final Type <w> NULLABLE _ STRING </w> = new Type ( ) { @ Override public boolean <w> is Nullable </w> ( ) { return true ; },0
"private void <w> validate 30 Raw Profile Activation </w> ( <w> Model Problem Collector </w> problems String <w> source Hint </w> , String prefix , <w> Model Building Request </w> request ) { if ( activation = = null ) { return ; } <w> Activation File </w> file = activation . <w> get File </w> ( ) ; if ( file ! = null ) { String path ; boolean missing ; if ( <w> String Utils </w> . <w> is Not Empty </w> ( file . <w> get Exists </w> ( ) ) ) { path = file . <w> get Exists </w> ( ) ; missing = false ; } else if ( <w> String Utils </w> . <w> is Not Empty </w> ( file . <w> get Missing </w> ( ) ) ) { path = file . <w> get Missing </w> ( ) ; missing = true ; } else { return ; } if ( path . contains ( <str-literal> <str-literal> <str-literal> ) ) { <w> add Violation </w> ( problems , Severity . WARNING , Version . <w> V 30 </w> , prefix + ( missing ? <str-literal> <str-literal> <str-literal> : <str-literal> <str-literal> <str-literal> ) , null , <str-literal> <str-literal> <str-literal> + path + <str-literal> <str-literal> <str-literal> + <w> source Hint </w> + <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> , file . <w> get Location </w> ( missing ? <str-literal> <str-literal> <str-literal> : <str-literal> <str-literal> <str-literal> ) ) ; } else if ( <w> has Project Expression </w> ( path ) ) { <w> add Violation </w> ( problems , Severity . WARNING , Version . <w> V 30 </w> , prefix + ( missing ? <str-literal> <str-literal> <str-literal> : <str-literal> <str-literal> <str-literal> ) , null , <str-literal> <str-literal> <str-literal> + path + <str-literal> <str-literal> <str-literal> + <w> source Hint </w> + <str-literal> <str-literal> <str-literal> , file . <w> get Location </w> ( missing ? <str-literal> <str-literal> <str-literal> : <str-literal> <str-literal> <str-literal> ) ) ; } } }",1
"abstract Builder < K , V > <w> set Configuration </w> ( <w> Serializable Configuration </w> configuration ) ;",1
@ Override protected Icon [ ] <w> get Icons </w> ( ) { if ( Model . <w> get Model Management Helper </w> ( ) . <w> is Read Only </w> ( <w> get Content </w> ( ) . <w> get Owner </w> ( ) ) ) { return new Icon [ 6 ] ; } return icons ; },1
public void <w> To Source </w> ( <w> String Builder </w> sb ) { sb . append ( <str-literal> <str-literal> <str-literal> ) ; },1
public <w> Cv Rect </w> <w> get Roi </w> ( ) { if ( <w> residual Update Needed </w> ) { <w> do Roi </w> ( ) ; } return roi ; },1
List < Command > <w> get Commands </w> ( ) { return new <w> Array List </w> < Command > ( commands ) ; },1
"private Resource <w> config Resource To Resource </w> ( <w> Config Resource </w> <w> config Resource </w> ) { <w> Resource Type </w> <w> resource Type </w> ; switch ( <w> config Resource </w> . type ( ) ) { case TOPIC : <w> resource Type </w> = <w> Resource Type </w> . TOPIC ; break ; case BROKER : <w> resource Type </w> = <w> Resource Type </w> . BROKER ; break ; default : throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> + <w> config Resource </w> . type ( ) ) ; } return new Resource ( <w> resource Type </w> , <w> config Resource </w> . name ( ) ) ; }",0
<w> CL Buffer </w> < <w> Byte Buffer </w> > <w> get Buffer </w> ( <w> Java CVCL </w> context int <w> struct Size </w> = 4 * ( 4 + <w> dot Size </w> + <w> dot Size </w> * <w> dot Size </w> ) ; if ( buffer = = null | | buffer . <w> get CL Size </w> ( ) < <w> struct Size </w> * <w> reduce Size </w> ) { if ( buffer ! = null ) buffer . release ( ) ; buffer = context . <w> get CL Context </w> ( ) . <w> create Byte Buffer </w> ( <w> struct Size </w> * <w> reduce Size </w> ) ; <w> Byte Buffer </w> <w> byte Buffer </w> = buffer . <w> get Buffer </w> ( ) ; <w> byte Buffer </w> . position ( 4 * 4 ) ; <w> src Dst Dot </w> = <w> byte Buffer </w> . <w> as Float Buffer </w> ( ) ; <w> byte Buffer </w> . position ( 4 * ( 4 + <w> dot Size </w> ) ) ; <w> dst Dst Dot </w> = <w> byte Buffer </w> . <w> as Float Buffer </w> ( ) ; <w> byte Buffer </w> . rewind ( ) ; } return buffer ; },1
<comment> public static final Schema [ ] <w> STOP _ REPLICA _ REQUEST </w> = { <w> STOP _ REPLICA _ REQUEST _ V 0 </w> } ;,1
private <w> Linked Hash Set </w> < String > <w> url Pattern </w> = new <w> Linked Hash Set </w> < > ( ) ;,1
"public Dimension <w> set Breadth </w> ( Dimension target , int source ) { if ( orientation = = VERTICAL ) return new Dimension ( source , ( int ) target . <w> get Height </w> ( ) ) ; else return new Dimension ( ( int ) target . <w> get Width </w> ( ) , source ) ; }",1
<comment> public static final String <w> APPLICATION _ ID _ CONFIG </w> = <str-literal> <str-literal> <str-literal> ;,0
public void <w> To Source </w> ( <w> String Builder </w> sb ) { String dot = <str-literal> <str-literal> ; for ( int i = 0 ; i < Identifier . length ; i + + ) { sb . append ( dot + Identifier [ i ] ) ; dot = <str-literal> <str-literal> <str-literal> ; } },1
<comment> static final int <w> ALL _ MISSING </w> = - 2 ;,0
<comment> private final <w> Concurrent Linked Queue </w> < <w> Request Future Completion Handler </w> > <w> pending Completion </w> = new <w> Concurrent Linked Queue </w> < > ( ) ;,1
private static final int <w> NUM _ COLUMNS </w> = 25 ;,0
<comment> private final List < <w> Execution Plan Item </w> > <w> plan Item </w> ;,1
protected List < Token > result ;,1
final int ord ;,0
public void validate ( <w> Plugin Descriptor </w> <w> plugin Descriptor </w> ) { <comment> if ( ! <w> first Descriptor </w> ) { return ; } <w> first Descriptor </w> = false ; if ( ! <w> plugin Artifact </w> . <w> get Group Id </w> ( ) . equals ( <w> plugin Descriptor </w> . <w> get Group Id </w> ( ) ) ) { errors . add ( <str-literal> <str-literal> <str-literal> + <w> plugin Descriptor </w> . <w> get Group Id </w> ( ) ) ; } if ( ! <w> plugin Artifact </w> . <w> get Artifact Id </w> ( ) . equals ( <w> plugin Descriptor </w> . <w> get Artifact Id </w> ( ) ) ) { errors . add ( <str-literal> <str-literal> <str-literal> + <w> plugin Descriptor </w> . <w> get Artifact Id </w> ( ) ) ; } if ( ! <w> plugin Artifact </w> . <w> get Base Version </w> ( ) . equals ( <w> plugin Descriptor </w> . <w> get Version </w> ( ) ) ) { errors . add ( <str-literal> <str-literal> <str-literal> + <w> plugin Descriptor </w> . <w> get Version </w> ( ) ) ; } },1
public List < <w> Position Span </w> > <w> get Position Spans </w> ( ) { return <w> position Spans </w> ; },0
protected int <w> max Worker Threads </w> ;,0
public long <w> ram Bytes Used </w> ( ) { return <w> Ram Usage Estimator </w> . <w> size Of </w> ( filter . <w> get Bits </w> ( ) ) ; },0
<comment> <w> Weak Reference </w> < <w> Static Membership Interceptor </w> > <w> static Members </w> = null ;,1
private static final int <w> NUM _ BROKERS </w> = 1 ;,0
<comment> protected final boolean <w> long Ords </w> ;,1
@ <w> Suppress Warnings </w> ( <str-literal> <str-literal> <str-literal> ) public List <w> get Debug Info </w> ( ) { List info = new <w> Array List </w> ( ) ; info . add ( <str-literal> <str-literal> <str-literal> ) ; for ( Iterator it = elements . registry . <w> entry Set </w> ( ) . iterator ( ) ; it . <w> has Next </w> ( ) ; ) { Map . Entry entry = ( Map . Entry ) it . next ( ) ; String item = entry . <w> get Key </w> ( ) . <w> to String </w> ( ) ; List <w> model Element Node </w> = <w> new Debug Node </w> ( <w> get Debug Description </w> ( item ) ) ; info . add ( <w> model Element Node </w> ) ; Map <w> property Map </w> = ( Map ) entry . <w> get Value </w> ( ) ; for ( Iterator <w> property Iterator </w> = <w> property Map </w> . <w> entry Set </w> ( ) . iterator ( ) ; <w> property Iterator </w> . <w> has Next </w> ( ) ; ) { Map . Entry <w> property Entry </w> = ( Map . Entry ) <w> property Iterator </w> . next ( ) ; List <w> property Node </w> = <w> new Debug Node </w> ( <w> property Entry </w> . <w> get Key </w> ( ) . <w> to String </w> ( ) ) ; <w> model Element Node </w> . add ( <w> property Node </w> ) ; List <w> listener List </w> = ( List ) <w> property Entry </w> . <w> get Value </w> ( ) ; for ( Iterator <w> list It </w> = <w> listener List </w> . iterator ( ) ; <w> list It </w> . <w> has Next </w> ( ) ; ) { Object listener = <w> list It </w> . next ( ) ; List <w> listener Node </w> = <w> new Debug Node </w> ( listener . <w> get Class </w> ( ) . <w> get Name </w> ( ) ) ; <w> property Node </w> . add ( <w> listener Node </w> ) ; } } } return info ; },1
private int nulls ;,1
<comment> protected String <w> extract Filename </w> ( String urlstring ) { String filename = <str-literal> <str-literal> ; if ( ! urlstring . <w> ends With </w> ( <str-literal> <str-literal> <str-literal> ) ) { int idx = urlstring . <w> last Index Of </w> ( <str-literal> ) ; filename = urlstring . substring ( idx ) ; } return filename ; },0
<comment> public void close ( ) { this . closed = true ; },0
<comment> private final int <w> num Words </w> ;,0
<comment> public Buffer [ ] image ;,0
<comment> protected final boolean <w> max X Plane Intersects </w> ;,0
public <w> Expression List </w> <w> Rank Specifier </w> ;,1
@ Override public boolean equals ( Object o ) { throw new <w> Unsupported Operation Exception </w> ( ) ; },0
<comment> public Map <w> get Object Model </w> ( ) { return env . <w> get Object Model </w> ( ) ; },1
<comment> private static final int <w> CIRCLE _ POINTS </w> = 32 ;,0
long <w> num Bytes </w> ;,0
<comment> static final byte <w> SORTED _ SET _ SINGLETON </w> = 5 ;,1
public void <w> To Source </w> ( <w> String Builder </w> sb ) { String comma = <str-literal> <str-literal> ; for ( <w> Expression Node </w> node : expressions ) { sb . append ( comma ) ; comma = <str-literal> <str-literal> <str-literal> ; node . <w> To Source </w> ( sb ) ; } },1
private <w> Packed Long Values </w> . Builder pending ;,1
<comment> protected static <w> Byte Entry </w> [ ] <w> bc Cache </w> = null ;,0
<comment> private int <w> skipped Positions </w> ;,1
<comment> public final static int <w> DEFAULT _ INDEX _ INTERVAL _ BITS </w> = 7 ;,0
private int <w> num Rows </w> = 0 ;,0
public Map <w> get Header </w> ( ) { return header ; },1
"<comment> private static final String [ ] PACKAGELIST = new String [ ] { <str-literal> <str-literal> <str-literal> , <comment> <comment> <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , <str-literal> <str-literal> <str-literal> , } ;",0
<comment> final long <w> num Terms </w> ;,0
<comment> private <w> Byte Buffer </w> <w> decompressed Buffer </w> ;,0
<comment> public <w> Leaf Reader </w> [ ] <w> get Parallel Readers </w> ( ) { <w> ensure Open </w> ( ) ; return <w> parallel Readers </w> ; },0
"public void <w> get Artifact </w> ( Artifact artifact throws <w> Transfer Failed Exception </w> , <w> Resource Does Not Exist Exception </w> { <w> get Artifact </w> ( artifact , <w> remote Repositories </w> , null , false ) ; }",1
<comment> protected int <w> max Threads </w> = 200 ;,0
private void <w> check Vertices </w> ( int <w> n Vertices </w> ) { if ( vertices = = null ) { vertices = new <w> Tree Set </w> < > ( ) ; } },1
<comment> private void <w> stop Editing </w> ( ) { if ( table . <w> is Editing </w> ( ) ) { <w> Table Cell Editor </w> ce = table . <w> get Cell Editor </w> ( ) ; try { if ( ce ! = null & & ! ce . <w> stop Cell Editing </w> ( ) ) { ce . <w> cancel Cell Editing </w> ( ) ; } } catch ( <w> Invalid Element Exception </w> e ) { <comment> <comment> <comment> <comment> LOG . warn ( <str-literal> <str-literal> <str-literal> + <str-literal> <str-literal> <str-literal> ) ; } } },0
"<comment> public <w> Double Metaphone Filter Factory </w> ( Map < String , String > args ) { super ( args ) ; inject = <w> get Boolean </w> ( args , INJECT , true ) ; <w> max Code Length </w> = <w> get Int </w> ( args , <w> MAX _ CODE _ LENGTH </w> , <w> DEFAULT _ MAX _ CODE _ LENGTH </w> ) ; if ( ! args . <w> is Empty </w> ( ) ) { throw new <w> Illegal Argument Exception </w> ( <str-literal> <str-literal> <str-literal> + args ) ; } }",0
@ Override protected String <w> get Instructions </w> ( int index ) { return instructions [ index - BASE ] ; },1
"<comment> private void <w> generate Classifier Body Operations </w> ( Object cls , <w> String Buffer </w> sb ) { Collection behs = <w> get Facade </w> ( ) . <w> get Operations </w> ( cls ) ; if ( behs . <w> is Empty </w> ( ) ) return ; sb . append ( <w> LINE _ SEPARATOR </w> ) ; if ( <w> verbose Docs </w> ) { sb . append ( indent ) . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> LINE _ SEPARATOR </w> ) ; } <comment> <w> String Buffer </w> [ ] funcs = new <w> String Buffer </w> [ 3 ] ; funcs [ 0 ] = new <w> String Buffer </w> ( 80 ) ; funcs [ 1 ] = new <w> String Buffer </w> ( 80 ) ; funcs [ 2 ] = new <w> String Buffer </w> ( 80 ) ; <w> generate Classifier Body Tagged Access 4 Attributes </w> ( cls , funcs [ <w> PRIVATE _ PART </w> ] , funcs [ <w> PROTECTED _ PART </w> ] , funcs [ <w> PUBLIC _ PART </w> ] ) ; Iterator <w> beh Enum </w> = behs . iterator ( ) ; while ( <w> beh Enum </w> . <w> has Next </w> ( ) ) { Object bf = <w> beh Enum </w> . next ( ) ; <w> String Buffer </w> tb = null ; int p = <w> get Visibility Part </w> ( bf ) ; if ( p < 0 ) continue ; tb = funcs [ p ] ; boolean <w> must Gen Body </w> = <w> check Generate Operation Body </w> ( bf ) ; if ( tb ! = null & & ( ( <w> generator Pass </w> = = <w> HEADER _ PASS </w> ) | | <w> must Gen Body </w> ) ) { tb . append ( <w> LINE _ SEPARATOR </w> ) ; tb . append ( <w> generate Operation </w> ( bf , false ) ) ; <comment> String tv = <w> generate Tagged Values </w> ( bf , <w> ALL _ BUT _ DOC _ TAGS </w> ) ; if ( <w> must Gen Body </w> & & ( <w> get Facade </w> ( ) . <w> is A Class </w> ( cls ) ) & & ( <w> get Facade </w> ( ) . <w> is A Operation </w> ( bf ) ) & & ( ! <w> get Facade </w> ( ) . <w> is Abstract </w> ( bf ) ) ) { <comment> tb . append ( <w> LINE _ SEPARATOR </w> ) . append ( <w> generate Method Body </w> ( bf ) ) ; } else { tb . append ( <str-literal> <str-literal> <str-literal> ) . append ( <w> LINE _ SEPARATOR </w> ) ; if ( tv . length ( ) > 0 ) { tb . append ( indent ) . append ( tv ) . append ( <w> LINE _ SEPARATOR </w> ) ; } } } } <comment> sb . append ( <w> generate All Parts </w> ( funcs ) ) ; }",0
<comment> private int <w> num Values </w> ;,0
private int <w> num Buckets </w> ;,0
"@ Override public Void <w> get Current Key </w> ( ) throws <w> IO Exception </w> , <w> Interrupted Exception </w> { return null ; }",1
private Collection < Object > model = null ;,0
"<comment> private Scalar <w> m Color Radius </w> = new Scalar ( 25 , 50 , 50 , 0 ) ;",0
